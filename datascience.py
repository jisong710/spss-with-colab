# -*- coding: utf-8 -*-
"""Penambangan Data 1_Dataset Adult.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IjXBBu9PgX2A5GJ4g5zadXxUfgpAdT6k
"""

import numpy as np
import pandas as pd
import seaborn as sn
import matplotlib.pyplot as plt
import statistics as st
import scipy
from scipy.stats import iqr

url="https://raw.githubusercontent.com/jisong710/census/main/adult.csv"
df = pd.read_csv(url)
df.head()

"""checking null value  sum and locations"""

df.isnull().any()

df.isnull().sum(axis=0).sum(axis=0)

df.isnull().sum(axis=0)

df.info()

df.corr()

fig, ax = plt.subplots(figsize =(10, 7)) 
ax.hist(df['age'], bins = [0,10,20,30,40,50,60,70,80,90,100]) 
  
# Show plot 
plt.show()

df['income'].corr()

df.duplicated().sum(axis=0)

sn.boxplot(y=df.iloc[:,0])

sn.boxplot(y=df.iloc[:,2])

sn.boxplot(y=df.iloc[:,4])

sn.boxplot(y=df.iloc[:,10])

sn.boxplot(y=df.iloc[:,11])

sn.boxplot(y=df.iloc[:,12])

"""Check Corr"""

sn.pairplot(df, hue='income', height=1)

"""Split Independent and Dependent Features"""

X = df.drop('income',axis=1)
Y = df['income']

"""# **Preprocessing Data**

Data Cleaning Search Mean Value then Replace NaN value with
"""

workclassMode = st.mode(df['workclass'])
occupationMode = st.mode(df['occupation'])
nativeMode = st.mode(df['native-country'])

print(workclassMode)
print(occupationMode)
print(nativeMode)

#testdf= df
#testdf.head()
#testdf['workclass'] = testdf['workclass'].replace(np.nan,workclassMode)
#testdf['workclass'].isnull().sum()


#df['workclass'] = df['workclass'].replace(np.nan,workclassMode)
#df['occupation'] = df['occupation'].replace(np.nan,occupationMode)
#df['native-country'] = df['native-country'].replace(np.nan,nativeMode)

"""Remove Duplicate Value """

df.duplicated().sum(axis=0)
df.sum()

tdf = df
tdf.drop_duplicates(subset = 'age', inplace=True)
tdf.duplicated().sum(axis=0)
tdf.sum()

"""Outlier Handling"""

#Data Statistik dari Dataset
df.describe()

print(df.groupby('income').size())

plt.hist(df['income'])

#IQR = iqr(df['age'], axis=0)
#Q1 = df['age'].quantile(0.25)
#Q3 = df['age'].quantile(0.75)

"""Data Transformation

Handling Categorical Value
"""

#race
#gender
#

"""Handling Numerical Value"""



"""Data Reduction"""